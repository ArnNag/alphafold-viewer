/**
 * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Mandar Deshpande <mandar@ebi.ac.uk>
 * @author David Sehnal <david.sehnal@gmail.com>
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 * @author Sebastian Bittrich <sebastian.bittrich@rcsb.org>
 */
import { Column } from 'molstar/lib/mol-data/db';
import { IndexedCustomProperty, Model } from 'molstar/lib/mol-model/structure';
import { Structure, StructureElement } from 'molstar/lib/mol-model/structure/structure';
import { ParamDefinition as PD } from 'molstar/lib/mol-util/param-definition';
import { PropertyWrapper } from 'molstar/lib/mol-model-props/common/wrapper';
import { CustomProperty } from 'molstar/lib/mol-model-props/common/custom-property';
import { CustomModelProperty } from 'molstar/lib/mol-model-props/common/custom-model-property';
export declare type AlphaFoldConfidence = PropertyWrapper<{
    score: IndexedCustomProperty.Residue<[number, string]>;
    category: string[];
}>;
export declare namespace AlphaFoldConfidence {
    function isApplicable(model?: Model): boolean;
    interface Info {
        timestamp_utc: string;
    }
    const Schema: {
        local_metric_values: {
            label_asym_id: Column.Schema.Str;
            label_comp_id: Column.Schema.Str;
            label_seq_id: Column.Schema.Int;
            metric_id: Column.Schema.Int;
            metric_value: Column.Schema.Float;
            model_id: Column.Schema.Int;
            ordinal_id: Column.Schema.Int;
        };
    };
    type Schema = typeof Schema;
    function fromCif(ctx: CustomProperty.Context, model: Model): AlphaFoldConfidence | undefined;
    function obtain(ctx: CustomProperty.Context, model: Model, _props: AlphaFoldConfidenceProps): Promise<CustomProperty.Data<any>>;
    function getConfidenceScore(e: StructureElement.Location): [number, string];
    function getCategories(structure?: Structure): string[];
}
export declare const AlphaFoldConfidenceParams: {};
export declare type AlphaFoldConfidenceParams = typeof AlphaFoldConfidenceParams;
export declare type AlphaFoldConfidenceProps = PD.Values<AlphaFoldConfidenceParams>;
export declare const AlphaFoldConfidenceProvider: CustomModelProperty.Provider<AlphaFoldConfidenceParams, AlphaFoldConfidence>;
